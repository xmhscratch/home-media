{
  "name": "home-media",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "client:start": "ng serve --host=0.0.0.0 --configuration=development",
    "client:build": "ng build --optimization=false",
    "client:watch": "ng build --watch --configuration=development",
    "client:test": "ng test",
    "client:serve:ssr:home-media": "node dist/home-media/server/server.mjs",
    "nest": "nest",
    "server:build": "nest --path='./server/tsconfig.json' build",
    "server:format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "server:start": "nest --sourceRoot='./server' --path='./server/tsconfig.json' start",
    "server:start:dev": "nest --sourceRoot='./server' --path='./server/tsconfig.json' start --watch",
    "server:start:debug": "nest --sourceRoot='./server' --path='./server/tsconfig.json' start --debug --watch",
    "server:start:prod": "node server/dist/main",
    "server:lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "server:test": "jest",
    "server:test:watch": "jest --watch",
    "server:test:cov": "jest --coverage",
    "server:test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "server:test:e2e": "jest --config ./test/jest-e2e.json",
    "docker:build:gonode": "docker build --no-cache --progress=plain -t localhost:5000/gonode:latest ./ci/gonode",
    "docker:build:sysenv": "docker build --no-cache --progress=plain -t localhost:5000/sysenv:latest ./ci/sysenv",
    "docker:build:hms": "docker build --no-cache --progress=plain -t localhost:5000/hms:latest ./ci",
    "docker:save:gonode": "docker save localhost:5000/gonode:latest > ./dist/docker/gonode.tar",
    "docker:save:sysenv": "docker save localhost:5000/sysenv:latest > ./dist/docker/sysenv.tar",
    "docker:save:hms": "docker save localhost:5000/hms:latest > ./dist/docker/hms.tar",
    "docker:load:gonode": "docker load --input ./dist/docker/gonode.tar",
    "docker:load:sysenv": "docker load --input ./dist/docker/sysenv.tar",
    "docker:load:hms": "docker load --input ./dist/docker/hms.tar",
    "docker:inspect:sysenv": "docker run --rm -it --entrypoint sh localhost:5000/sysenv:latest",
    "docker:inspect:hms": "docker run --rm -it --entrypoint sh localhost:5000/hms:latest",
    "swarmpit": "dotenvx run -- docker stack deploy --prune --resolve-image always -c ./ci/swarmpit/docker-stack.yml swarmpit",
    "redis": "dotenvx run -- docker stack deploy --prune --resolve-image always -c ./ci/redis/docker-stack.yml redis",
    "logstash": "dotenvx run -- docker stack deploy --prune --resolve-image always -c ./ci/logstash/docker-stack.yml logstash",
    "hms:deploy": "dotenvx run -- docker stack deploy --prune --resolve-image always -c ./ci/docker-stack.yml hms",
    "hms:destroy": "dotenvx run -- docker stack rm hms",
    "hms:update": "dotenvx run -- docker service update --force $@",
    "hms:up": "dotenvx run -- docker service update --replicas 1 $@",
    "hms:down": "dotenvx run -- docker service update --replicas 0 $@"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^18.2.0",
    "@angular/common": "^18.2.0",
    "@angular/compiler": "^18.2.0",
    "@angular/core": "^18.2.0",
    "@angular/forms": "^18.2.0",
    "@angular/platform-browser": "^18.2.0",
    "@angular/platform-browser-dynamic": "^18.2.0",
    "@angular/platform-server": "^18.2.0",
    "@angular/router": "^18.2.0",
    "@angular/ssr": "^18.2.12",
    "@dotenvx/dotenvx": "^1.36.0",
    "@fastly/performance-observer-polyfill": "^2.0.0",
    "@grpc/grpc-js": "^1.12.5",
    "@grpc/proto-loader": "^0.7.13",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^4.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/microservices": "^10.4.15",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.4.15",
    "@nestjs/websockets": "^10.4.15",
    "@primeng/themes": "^18.0.2",
    "amqp-connection-manager": "^4.1.14",
    "array.prototype.flat": "^1.3.3",
    "better-sqlite3": "^11.7.2",
    "bson-objectid": "^2.0.4",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "es5-shim": "^4.6.7",
    "express": "^4.18.2",
    "filesize": "^10.1.6",
    "flatory": "^0.0.6",
    "globalthis": "^1.0.4",
    "ioredis": "^5.4.2",
    "kafkajs": "^2.2.4",
    "lodash-es": "^4.17.21",
    "lru-cache": "^11.0.2",
    "mqtt": "^5.10.3",
    "nats": "^2.29.1",
    "object-hash": "^3.0.0",
    "object.fromentries": "^2.0.8",
    "primeicons": "^7.0.0",
    "primeng": "^18.0.2",
    "queue-microtask": "^1.2.3",
    "range-parser": "^1.2.1",
    "reflect-metadata": "^0.2.0",
    "rss-parser": "^3.13.0",
    "rxjs": "~7.8.0",
    "sql.js": "^1.12.0",
    "string.prototype.matchall": "^4.0.12",
    "string.prototype.replaceall": "^1.0.10",
    "tailwindcss": "^3.4.17",
    "tailwindcss-primeui": "^0.4.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.14.10"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^18.2.12",
    "@angular/cli": "^18.2.12",
    "@angular/compiler-cli": "^18.2.0",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jasmine": "~5.1.0",
    "@types/jest": "^29.5.2",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^18.18.0",
    "@types/sql.js": "^1.4.9",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "autoprefixer": "^10.4.20",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jasmine-core": "~5.2.0",
    "jest": "^29.5.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "postcss": "^8.5.1",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "~5.5.2",
    "video.js": "^8.23.0"
  },
  "optimization": {
    "scripts": false,
    "styles": {
      "minify": true,
      "inlineCritical": true
    },
    "fonts": true
  }
}
