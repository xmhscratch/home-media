kind: Deployment
apiVersion: apps/v1
metadata:
  name: backend
  namespace: hms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: wait-for-redis
          image: docker.io/bitnami/redis:7.4
          command:
            - "/bin/sh"
            - "-c"
          args:
            - until redis-cli -h master.redis ping | grep PONG; do echo waiting for redis; sleep 2; done;
      containers:
        - name: backend
          image: localhost:5000/hms:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 4100
              name: backend
          env:
            - name: APP_NAME
              value: "hms_backend"
            - name: NODE_ENV
              value: "production"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - npm run backend:start:prod
          volumeMounts:
            - name: pvc-dist
              mountPath: /export/dist/
              readOnly: true
            - name: pvc-db
              mountPath: /export/db/
            - name: pvc-tmp
              mountPath: /tmp/
            - name: pvc-storage
              mountPath: /export/storage/
            - name: runtime-config
              mountPath: /export/
      volumes:
        - name: pvc-dist
          persistentVolumeClaim:
            claimName: pvc-dist
        - name: pvc-db
          persistentVolumeClaim:
            claimName: pvc-db
        - name: pvc-tmp
          persistentVolumeClaim:
            claimName: pvc-tmp
        - name: pvc-storage
          persistentVolumeClaim:
            claimName: pvc-storage
        - name: runtime-config
          configMap:
            name: runtime-config
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
  namespace: hms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: localhost:5000/hms:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 4000
              name: frontend
          env:
            - name: APP_NAME
              value: "hms_frontend"
            - name: NODE_ENV
              value: "production"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - npm run frontend:serve:ssr
          volumeMounts:
            - name: pvc-dist
              mountPath: /export/dist/
              readOnly: true
            - name: runtime-config
              mountPath: /export/
      volumes:
        - name: pvc-dist
          persistentVolumeClaim:
            claimName: pvc-dist
        - name: runtime-config
          configMap:
            name: runtime-config
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: api
  namespace: hms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - name: wait-for-redis
        image: docker.io/bitnami/redis:7.4
        command:
          - "/bin/sh"
          - "-c"
        args:
          - until redis-cli -h master.redis ping | grep PONG; do echo waiting for redis; sleep 2; done;
      containers:
        - name: api
          image: localhost:5000/hms:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 4110
              name: api
          env:
            - name: APP_NAME
              value: "hms_api"
            - name: GO_ENV
              value: "production"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - cd /export/dist/ && ./api
          volumeMounts:
            - name: pvc-dist
              mountPath: /export/dist/
              readOnly: true
            - name: pvc-db
              mountPath: /export/db/
            - name: pvc-tmp
              mountPath: /tmp/
            - name: pvc-storage
              mountPath: /export/storage/
            - name: runtime-config
              mountPath: /export/
      volumes:
        - name: pvc-dist
          persistentVolumeClaim:
            claimName: pvc-dist
        - name: pvc-db
          persistentVolumeClaim:
            claimName: pvc-db
        - name: pvc-tmp
          persistentVolumeClaim:
            claimName: pvc-tmp
        - name: pvc-storage
          persistentVolumeClaim:
            claimName: pvc-storage
        - name: runtime-config
          configMap:
            name: runtime-config
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: file
  namespace: hms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: file
  template:
    metadata:
      labels:
        app: file
    spec:
      initContainers:
      - name: wait-for-redis
        image: docker.io/bitnami/redis:7.4
        command:
          - "/bin/sh"
          - "-c"
        args:
          - until redis-cli -h master.redis ping | grep PONG; do echo waiting for redis; sleep 2; done;
      containers:
        - name: file
          image: localhost:5000/hms:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 4150
              name: file
          env:
            - name: APP_NAME
              value: "hms_file"
            - name: GO_ENV
              value: "production"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - cd /export/dist/ && ./file
          volumeMounts:
            - name: pvc-dist
              mountPath: /export/dist/
              readOnly: true
            - name: pvc-db
              mountPath: /export/db/
            - name: pvc-tmp
              mountPath: /tmp/
            - name: pvc-storage
              mountPath: /export/storage/
            - name: runtime-config
              mountPath: /export/
      volumes:
        - name: pvc-dist
          persistentVolumeClaim:
            claimName: pvc-dist
        - name: pvc-db
          persistentVolumeClaim:
            claimName: pvc-db
        - name: pvc-tmp
          persistentVolumeClaim:
            claimName: pvc-tmp
        - name: pvc-storage
          persistentVolumeClaim:
            claimName: pvc-storage
        - name: runtime-config
          configMap:
            name: runtime-config
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: downloader
  namespace: hms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: downloader
  template:
    metadata:
      labels:
        app: downloader
    spec:
      initContainers:
      - name: wait-for-redis
        image: docker.io/bitnami/redis:7.4
        command:
          - "/bin/sh"
          - "-c"
        args:
          - until redis-cli -h master.redis ping | grep PONG; do echo waiting for redis; sleep 2; done;
      containers:
        - name: downloader
          image: localhost:5000/hms:latest
          imagePullPolicy: Never
          env:
            - name: APP_NAME
              value: "hms_downloader"
            - name: GO_ENV
              value: "production"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - cd /export/dist/ && ./downloader
          volumeMounts:
            - name: pvc-dist
              mountPath: /export/dist/
              readOnly: true
            - name: pvc-db
              mountPath: /export/db/
            - name: pvc-tmp
              mountPath: /tmp/
            - name: pvc-storage
              mountPath: /export/storage/
            - name: runtime-config
              mountPath: /export/
      volumes:
        - name: pvc-dist
          persistentVolumeClaim:
            claimName: pvc-dist
        - name: pvc-db
          persistentVolumeClaim:
            claimName: pvc-db
        - name: pvc-tmp
          persistentVolumeClaim:
            claimName: pvc-tmp
        - name: pvc-storage
          persistentVolumeClaim:
            claimName: pvc-storage
        - name: runtime-config
          configMap:
            name: runtime-config
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: encoder
  namespace: hms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: encoder
  template:
    metadata:
      labels:
        app: encoder
    spec:
      initContainers:
      - name: wait-for-redis
        image: docker.io/bitnami/redis:7.4
        command:
          - "/bin/sh"
          - "-c"
        args:
          - until redis-cli -h master.redis ping | grep PONG; do echo waiting for redis; sleep 2; done;
      containers:
        - name: encoder
          image: localhost:5000/hms:latest
          imagePullPolicy: Never
          env:
            - name: APP_NAME
              value: "hms_encoder"
            - name: GO_ENV
              value: "production"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - cd /export/dist/ && ./encoder
          volumeMounts:
            - name: pvc-dist
              mountPath: /export/dist/
              readOnly: true
            - name: pvc-db
              mountPath: /export/db/
            - name: pvc-tmp
              mountPath: /tmp/
            - name: pvc-storage
              mountPath: /export/storage/
            - name: runtime-config
              mountPath: /export/
      volumes:
        - name: pvc-dist
          persistentVolumeClaim:
            claimName: pvc-dist
        - name: pvc-db
          persistentVolumeClaim:
            claimName: pvc-db
        - name: pvc-tmp
          persistentVolumeClaim:
            claimName: pvc-tmp
        - name: pvc-storage
          persistentVolumeClaim:
            claimName: pvc-storage
        - name: runtime-config
          configMap:
            name: runtime-config
