version: '3.9'

services:
  backend:
    image: localhost:5000/hms:latest
    container_name: hms_backend_app
    ports:
    - 4100:4100
    networks:
    - backend
    - logstash_backend
    - redis_backend
    environment:
    - APP_NAME=hms_backend
    - NODE_ENV=production
    volumes:
    - tmp:/export/tmp/
    - data:/export/data/
    - root:/go/src/home-media/
    working_dir: /go/src/home-media/
    command:
    - npm rebuild && npm run backend:start
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      update_config:
        parallelism: 2
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 180s

  frontend:
    image: localhost:5000/hms:latest
    container_name: hms_frontend_app
    ports:
    - 4200:4200
    networks:
    - backend
    - logstash_backend
    - redis_backend
    environment:
    - APP_NAME=hms_frontend
    - NODE_ENV=production
    volumes:
    - tmp:/export/tmp/
    - data:/export/data/
    - root:/go/src/home-media/
    working_dir: /go/src/home-media/
    command:
    - npm run client:start
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      update_config:
        parallelism: 2
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 180s

  file:
    image: localhost:5000/hms:latest
    container_name: hms_file_app
    ports:
    - 4150:4150
    networks:
    - backend
    - logstash_backend
    - redis_backend
    environment:
    - APP_NAME=hms_file
    - GO_ENV=production
    volumes:
    - tmp:/export/tmp/
    - data:/export/data/
    - root:/go/src/home-media/
    working_dir: /go/src/home-media/cmd
    command:
    - go run ./file/main.go
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager

  api:
    image: localhost:5000/hms:latest
    container_name: hms_api_app
    ports:
    - 4110:4110 # http
    - 4111:4111 # config share
    networks:
    - backend
    - logstash_backend
    - redis_backend
    environment:
    - APP_NAME=hms_api
    - GO_ENV=production
    volumes:
    - tmp:/export/tmp/
    - data:/export/data/
    - root:/go/src/home-media/
    working_dir: /go/src/home-media/cmd
    command:
    - go run ./api/main.go
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager

  downloader:
    image: localhost:5000/hms:latest
    container_name: hms_downloader_app
    networks:
    - backend
    - logstash_backend
    - redis_backend
    environment:
    - APP_NAME=hms_downloader
    - GO_ENV=production
    volumes:
    - tmp:/export/tmp/
    - data:/export/data/
    - root:/go/src/home-media/
    working_dir: /go/src/home-media/cmd
    command:
    - go run ./downloader/main.go
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager

  # encoder:
  #   image: localhost:5000/hms:latest
  #   container_name: hms_encoder_app
  #   networks:
  #   - backend
  #   - logstash_backend
  #   - redis_backend
  #   environment:
  #   - APP_NAME=hms_encoder
  #   - GO_ENV=production
  #   volumes:
  #   - tmp:/export/tmp/
  #   - data:/export/data/
  #   - root:/go/src/home-media/
  #   working_dir: /go/src/home-media/cmd
  #   command:
  #   - go run ./encoder/main.go
  #   deploy:
  #     replicas: 1
  #     placement:
  #       constraints:
  #       - node.role != manager

networks:
  backend:
    driver: overlay
    attachable: true
  logstash_backend:
    external: true
  redis_backend:
    external: true

volumes:
  tmp:
    driver: local
    driver_opts:
      type: nfs
      o: 'addr=${NFS_SERVER_ADDR},nfsvers=4,exec,nodev,noatime,nodiratime,soft,rsize=1048576,wsize=1048576'
      device: ':/tmp/'

  data:
    driver: local
    driver_opts:
      type: nfs
      o: 'addr=${NFS_SERVER_ADDR},nfsvers=4,exec,nodev,noatime,nodiratime,soft,rsize=1048576,wsize=1048576'
      device: ':/data/'

  root:
    driver: local
    driver_opts:
      type: nfs
      o: 'addr=${NFS_SERVER_ADDR},nfsvers=4,exec,nodev,noatime,nodiratime,soft,rsize=1048576,wsize=1048576'
      device: ':/web/repos/home-media/'
